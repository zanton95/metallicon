/* 
  Lev notes:
   - There are other places with 'Lev notes' here, go over them and delete them afterwards.
   - General note - this looks really good man. Good and understandbale css selector names, no duplicate code that's being copy pasted a million times,
     and it looks very clean overall. Really good job, it's pleasant to look at!
   - Take a look at the warnings (yellow / orange underline in VSCode) and error (red underline) on this page. If you mouseover a warning or error it will tell you the issue.
     Not all of these are always critical, but every browser and every browser version could interpret these things a little differently so it's good to take care of these.
     Sometimes you know an error shows and you decide to keep it knowingly for some reason and it's ok, but anything not intentional - take care of 
     (it's usually just deleting empty lines or something)
 */

body {
  margin: 0;
  padding: 0;
  
}

@font-face {
  font-family: 'Metallica'; src: url('../fonts/PASTOROF.TTF') ;
}

/* Index page */
.web-container {
    /* width: 100%;
    height: 100%;
    margin: 0px;
    padding: 0px; */
    /* overflow-x: hidden;  */
    
} 



.topnav {
  background-color: #333;
  width: 100%;
  position: relative;
  padding-top: 33px;
 }


  .topnav a {
  position: relative;
  color: aliceblue;
  font-size: 35px;
  font-family: 'Metallica';
  text-decoration: none;
  padding: 20px;
  }
 
  .topnav a:hover {
    color: rgba(255, 166, 0, 0.89);
    background-color: rgb(80, 77, 77);
    padding: ;
  }
 
.home {
  margin-left: 64px;
  bottom: 17px;
  
}

.songs {
  
  bottom: 17px;
}

.search-bar {
  position: relative;
  padding: 5px 5px;
  font-size: 17px;
  border: 1px solid #ccc;
  border-radius: 4px;
  left: 1370px;
  width: 195px;
  bottom: 11px;
}

.topnav i {
  position: relative;
  left: 1340px;
  bottom: 11px;
  color:#9e9c9c;
  font-size: 17px;
}

.main-img {
  width: 100%;
  position: relative;
  overflow: hidden;
  z-index: -1;
} 
  
}

.container {
  /* position: relative; */
  /* text-align: center;
  color: white; */
}

.top-left {
  position: relative;
  font-size: 75px;
  font-family: 'Metallica';
  color: #1d1d1d;
  bottom: 630px;
  left: 82px;
  width: 450px;
  
}

.middle-head {
  position: relative ;
  bottom: 149px;
  left: ;
  text-align: center;
  font-size: 64px;
  font-family: 'Metallica';
  color: #333333;
}

.video-container {
  position: relative;
  text-align: center;
  color: white;
  bottom: 280px;
  height: 277px;
}
.video {
 
  

}

.middle-paragraph {
  position: relative;
  color: #333333;
  font-size: 18px;
  font-style: italic;
  bottom: 188px;
  text-align: center;
}

.bottom-paragraph {
  position: relative;
  top: 245px;
  font-family: 'Metallica';
  color: #333333;
  font-size: 42px;
  text-align: center;
}

/* !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! Songs page !!!!!!!!!!!!!!!!!!!!!!!!! */

.songs-list-container {
  /* margin-top: 50px;
  margin-left: 26.5%; */
}

.songs-list {
  border-style: solid;
  width: 890px;
  list-style-type: none;
  border-width: 0.2px;
  padding-left: 0;
  margin-left: 26.5%;
  border-radius: 5px;
  display: block;
  margin-top: 30px;
}

hr {
  border-color:#333333;
  border-top: 0px solid #333333;
  margin: 0px;
  
}

li {
  /* padding-top: 5px;
 padding-bottom: 5px; */
}
 
/* li a {
   color: black;
   color: inherit;
   display: block;
 } */
 

ul li:hover {
background: #f1eeeec9;
color: white;
}

.songs-title-container {
  margin-top: 45px;
}

.songs-title {
  color: #333333;
  margin-left: 26.5%;
}

/* 
  Lev notes:
   - Take a look at the note at the bottom about the titles before reading this one.
   - This is a similar case - you can see thtat song-ling-1, song-ling-2 and song-ling-3 are exactly the same - you could use a single class in your html and a single css selector here
     for these.
     The 'tell' here that made me look into this is that you started adding numbers at the end here. Again, if there are 1000 songs in this website, how many classes you'd have to create?
   - Also if you decide you're using numbers in html classes, there usually needs to be a reason because otherwise it's not very clear to other programmers what the class is used for.
     For example - 'song-link' is very clear, if I see it in the css I'll know more or less what to expect in the code where it's used. 
     If it were 'link-1' I'd know less about it and maybe thing this is used for all of the links in the website or that I need to check the code to understand.
*/
.song-link-1 {
  color: #333333;
   text-decoration: none;
   display: block;
   padding-bottom: 12px;
  padding-top: 12px;
}

.song-link-2 {
  text-decoration: none;
  color: #333333;
  display: block;
  padding-bottom: 12px;
  padding-top: 12px;
}

.song-link-3 {
  text-decoration: none;
  padding-bottom: 12px;
  padding-top: 12px;
  color: #333333;
  display: block;
}

/* bottom bar  */
.icon-bar {
  position: fixed;
    left: 0;
    bottom: 0;
    width: 100%;
    background-color: #333;
    color: #fff;
    text-align: center;
    padding-top: 10px;
    padding-bottom: 10px;
    margin-top: 56px;
    font-size: 19px;
}

.facebook, .twitter, .instagram{
  color: white;
}

/* The Songs  */

/* 
  Lev Notes:
   - Notice that these specific names are all basically the 'song title' for each song. 
     You can see that you're using 3 classes in your html but they're all used for the same reason - why not use the same class for all of them? :)
   - A rule of thumb for these things is that you should create classes that name things in your html, 
     like containers, wrappers (some div you use to put around something to maybe center it or manupulate the whole view together) and items that are general names for the items
     in your html like songs, titles etc. If you find yourself creating a class per song title, stop to think whehter that's something you want to do on purpose for some reason
     (could happen sometimes) or if you just missed something and should name things differently.
     For example in this case - how many of these classes will you have to create if you have 1000 songs in your app?
 */
.nem-title, .unforgiven-title, .enter-title {
  text-align: center;
  margin-top: 41px;
  color: #333;
 }

 .nem-song, .unforgiven-song, .enter-song {
  margin-bottom: 100px;
  margin-top: 22px;
  text-align: center;
  font-size: 21px;
  color: #333;
 
}


